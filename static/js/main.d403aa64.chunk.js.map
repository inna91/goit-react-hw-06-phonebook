{"version":3,"sources":["Components/Section/Section.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/TotalNumber/TotalNumber.module.css","Components/ContactsList/ContactList.module.css","App.module.css","Components/ContactItem/ContactItem.js","redux/contacts-actions.js","redux/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/TotalNumber/TotalNumber.js","Components/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","ContactItem","name","number","deleteContact","className","s","item","button","onClick","addContact","createAction","changeFilter","getContacts","state","contacts","items","getFilter","filter","filteredContacts","normalizedContact","toLowerCase","includes","ContactsList","useSelector","dispatch","useDispatch","list","map","id","contactsActions","Form","useState","setName","setNumber","handleChange","event","target","value","resetForm","onSubmit","preventDefault","sameName","existName","nameHandler","find","existNameHandler","contact","alert","label","htmlFor","input","type","onChange","placeholder","required","Filter","connect","total","length","wrap","Section","title","children","section","App","container","createReducer","payload","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d403aa64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ACGv\",\"title\":\"Section_title__1h2MA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__24blG\",\"button\":\"ContactItem_button__2tooM\",\"ani9\":\"ContactItem_ani9__2w43M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__PZPSI\",\"input\":\"Filter_input__1ts6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TotalNumber_wrap__2rYBM\",\"number\":\"TotalNumber_number__2Iwnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3kJ4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2OodC\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.button} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedContact = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedContact),\n  );\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { filteredContacts } from '../../redux/contacts-selectors';\n\nconst ContactsList = () => {\n  const contacts = useSelector(filteredContacts);\n  const dispatch = useDispatch();\n\n  const deleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => deleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport s from './Form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const existNameHandler = existName => {\n    const nameHandler = existName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const sameName = existNameHandler(name);\n    const contact = { id: name, name, number };\n\n    if (sameName) {\n      alert(`${name} is already in your phonebook`);\n    } else {\n      //  const contact = { id: name, name, number };\n      dispatch(contactsActions.addContact(contact));\n    }\n\n    if (contact === '') {\n      return alert('Enter values');\n    }\n\n    resetForm();\n    setName('');\n    setNumber('');\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={name}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={name}\n          name={'name'}\n          onChange={handleChange}\n          id={name}\n          placeholder=\"Enter contact name\"\n          required\n        />\n      </label>\n      <label className={s.label} htmlFor={number}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name={'number'}\n          value={number}\n          onChange={handleChange}\n          id={number}\n          placeholder=\"Enter contact number\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add the new contact\n      </button>\n    </form>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: contact => dispatch(contactsActions.addContact(contact)),\n// });\n\n// export default connect(mapDispatchToProps)(Form);\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Сontact search\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search by name\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.changeFilter(event.target.value))\n        }\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './TotalNumber.module.css';\n\nconst TotalNumber = ({ total }) => {\n  return (\n    <div className={s.wrap}>\n      <p className={s.number}>Number of contacts: {total}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  total: state.contacts.items.length,\n});\n\nexport default connect(mapStateToProps)(TotalNumber);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <div className={s.wrap}>\n        {title && <h2 className={s.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport TotalNumber from './Components/TotalNumber/TotalNumber';\nimport Section from './Components/Section/Section';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <TotalNumber />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [payload, ...state],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from './contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__rUG0l\",\"ani9\":\"Form_ani9__3G5hu\",\"input\":\"Form_input__xC-2M\",\"label\":\"Form_label__1wZWe\"};"],"sourceRoot":""}